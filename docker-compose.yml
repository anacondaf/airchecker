services:
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    container_name: mysql_air_checker
    environment:
      - MYSQL_DATABASE=airchecker
      - MYSQL_ROOT_PASSWORD=P@ssw0rd!
    ports:
      - "3306:3306"
    volumes:
      - ./airchecker/mysqldata:/var/lib/mysql
      - ./configs/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - node-network

  emqx:
    image: emqx/emqx:5.3.0
    restart: unless-stopped
    container_name: emqx_air_checker
    ports:
      - "1883:1883"
      - "8083:8083"
      - "8084:8084"
      - "8883:8883"
      - "18083:18083"
    networks:
      - node-network

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - "PORT=80"
      - "RABBITMQ=localhost"
      - "NODE_ENV=development"
      - "DB_PORT=3306"
      - "DB_HOST=localhost"
      - "DB_USERNAME=root"
      - "DB_PASSWORD=P@ssw0rd!"
      - "DB_NAME=airchecker"
      - "DB_URL=mysql://root:P@ssw0rd!@localhost:5432/airchecker"
      - "MONGODB_URL=mongodb+srv://admin:Pa$$word!@aircheckercluster.yymawyw.mongodb.net/aircheckerdb?retryWrites=true&w=majority"
      - "MQTT_PROTOCOL=mqtt"
      - "MQTT_HOST=broker.emqx.io"
      - "MQTT_PORT=1883"
      - "MQTT_USER=emqx"
      - "MQTT_PASSWORD=public"
    restart: unless-stopped
    container_name: api
    ports:
      - "8080:80"
    networks:
      - node-network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: on-failure
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      api:
        condition: service_started
    networks:
      - node-network

networks:
  node-network:
    driver: bridge
