services:
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    container_name: mysql_air_checker
    environment:
      - MYSQL_DATABASE=airchecker
      - MYSQL_ROOT_PASSWORD=P@ssw0rd!
    ports:
      - "3306:3306"
    volumes:
      - ./airchecker/mysqldata:/var/lib/mysql
      - ./configs/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - node-network

  emqx:
    image: emqx/emqx:5.3.0
    restart: unless-stopped
    container_name: emqx_air_checker
    ports:
      - "1883:1883"
      - "8083:8083"
      - "8084:8084"
      - "8883:8883"
      - "18083:18083"
    networks:
      - node-network

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: api
    ports:
      - "8080:80"
    networks:
      - node-network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: on-failure
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./client:/app/client
      - ./ssl:/ssl
    depends_on:
      api:
        condition: service_started
    networks:
      - node-network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer_air_checker
    ports:
      - "9000:9000"
    volumes:
      - ./airchecker/portainerdata:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - node-network

  mongo:
    image: mongo:6
    restart: always
    container_name: mongo
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./airchecker/mongodata:/data/db
    networks:
      - node-network

networks:
  node-network:
    driver: bridge
